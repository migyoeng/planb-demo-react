name: Build and Deploy to AWS ECR

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: ap-northeast-2  # 서울 리전
  ECR_NAMESPACE: plan-b  # ECR 네임스페이스 (조직명)
  ECR_REPOSITORY: user-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Generate image tags
      id: tags
      run: |
        # 짧은 커밋 해시 (7자리)
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
        # 브랜치명 (main -> latest)
        BRANCH_TAG=${GITHUB_REF#refs/heads/}
        if [ "$BRANCH_TAG" = "main" ]; then
          BRANCH_TAG="latest"
        fi
        
        echo "short-sha=$SHORT_SHA" >> $GITHUB_OUTPUT
        echo "branch-tag=$BRANCH_TAG" >> $GITHUB_OUTPUT
        
    - name: Build and push Docker image to ECR
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: ${{ github.event_name == 'push' }}
        tags: |
          ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_NAMESPACE }}/${{ env.ECR_REPOSITORY }}:${{ steps.tags.outputs.branch-tag }}
          ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_NAMESPACE }}/${{ env.ECR_REPOSITORY }}:${{ steps.tags.outputs.short-sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Image size report
      run: |
        echo "Image built and pushed successfully!"
        echo "Repository: ${{ env.ECR_NAMESPACE }}/${{ env.ECR_REPOSITORY }}"
        echo "Branch Tag: ${{ steps.tags.outputs.branch-tag }}"
        echo "Short SHA: ${{ steps.tags.outputs.short-sha }}"
        
    - name: Deployment Dashboard
      run: |
        echo "===== DEPLOYMENT DASHBOARD ====="
        echo "배포 시간: $(date '+%Y-%m-%d %H:%M:%S')"
        echo "커밋 해시: ${{ github.sha }}"
        echo "작성자: ${{ github.actor }}"
        echo "커밋 메시지: ${{ github.event.head_commit.message }}"
        echo "ECR 이미지: ${{ env.ECR_NAMESPACE }}/${{ env.ECR_REPOSITORY }}:${{ steps.tags.outputs.branch-tag }}"
        echo "빌드 상태: SUCCESS"
        echo "빌드 완료 시간: $(date)"
        echo "워크플로우 실행 ID: ${{ github.run_id }}"
        echo "이벤트 타입: ${{ github.event.name }}"
        echo "트리거: ${{ github.event.head_commit.author.name }}"
        echo "저장소: ${{ github.repository }}"
        echo "AWS 리전: ${{ env.AWS_REGION }}"
        echo "====================================="
        
    - name: Build Details
      run: |
        echo "===== BUILD DETAILS ====="
        echo "Dockerfile: Dockerfile"
        echo "빌드 컨텍스트: ."
        echo "캐시 사용: GitHub Actions 캐시 활성화"
        echo "푸시 대상: AWS ECR"
        echo "이미지 태그:"
        echo "  - ${{ steps.tags.outputs.branch-tag }} (브랜치별)"
        echo "  - ${{ steps.tags.outputs.short-sha }} (짧은 커밋해시)"
        echo "ECR 저장소: ${{ env.ECR_NAMESPACE }}/${{ env.ECR_REPOSITORY }}"
        echo "============================="
